{"ast":null,"code":"var _jsxFileName = \"/Volumes/storage II/react-game/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/*\n* The code follows the instructions from REACT Official Document\n* https://legacy.reactjs.org/tutorial/tutorial.html\n* https://zh-hans.react.dev/learn/tutorial-tic-tac-toe\n*/\n/*\n * Square function\n * 1. `export` indicates that this function can be used outside this file\n * 2. `default` indicates that this function is the main function of this file\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  /*1. keyword `return` will return the following info to the caller\n  * 2. <button> is a JSX element, --> JSX = HTML + JS\n  * 3. className=\"square\"> is an attribute of button, which will decide how CSS will design the style\n  * 4. `X` is the text shown in the button\n  * 5. </button> --> a close tag\n  * 6. The react return can only return one element. \n  * Wrong:   return <button className=\"square\">X</button><button className=\"square\">X</button>;\n  * Correct: use <> </>  () to wrap\n  * 7. use <div> to change the position！！！！！！\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \" //\", /*#__PURE__*/_jsxDEV(Square, {\n        value: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/*\n* 1. to avoid redundancy, here the `Square` component is created\n* 2. To update the value, we have to pass the {value} from parent component (Board) to child component (Square)\n*/\n//function Square({value})\n// don't forget to add {}\n_c = Board;\nfunction Square() {\n  _s();\n  /*\n  *  Before the X value will be passed to 'Square' function, but now it will be added by `handleClick` function\n  */\n\n  const [value, setValue] = useState(null);\n  function handleClick() {\n    console.log(\"clicked!\");\n    setValue('X');\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: handleClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Square, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c2 = Square;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","children","className","Square","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","_s","setValue","handleClick","console","log","onClick","_c2","$RefreshReg$"],"sources":["/Volumes/storage II/react-game/src/App.js"],"sourcesContent":["import {useState} from 'react';\n/*\n* The code follows the instructions from REACT Official Document\n* https://legacy.reactjs.org/tutorial/tutorial.html\n* https://zh-hans.react.dev/learn/tutorial-tic-tac-toe\n*/\n/*\n * Square function\n * 1. `export` indicates that this function can be used outside this file\n * 2. `default` indicates that this function is the main function of this file\n*/\nexport default function Board() {\n   /*1. keyword `return` will return the following info to the caller\n   * 2. <button> is a JSX element, --> JSX = HTML + JS\n   * 3. className=\"square\"> is an attribute of button, which will decide how CSS will design the style\n   * 4. `X` is the text shown in the button\n   * 5. </button> --> a close tag\n   * 6. The react return can only return one element. \n   * Wrong:   return <button className=\"square\">X</button><button className=\"square\">X</button>;\n   * Correct: use <> </>  () to wrap\n   * 7. use <div> to change the position！！！！！！\n   */\n  return (\n    <>\n      <div className = \"board-row\"> \n        <Square /> //<Square value = \"1\" /> \n        <Square />\n        <Square />\n      </div>\n      <div className = \"board-row\">\n        <Square />  \n        <Square />\n        <Square />\n      </div>\n      <div className = \"board-row\"> \n        <Square />\n        <Square />\n        <Square />\n      </div>\n    </>\n      \n  )\n  \n  \n}\n/*\n* 1. to avoid redundancy, here the `Square` component is created\n* 2. To update the value, we have to pass the {value} from parent component (Board) to child component (Square)\n*/\n//function Square({value})\n // don't forget to add {}\nfunction Square(){\n\n  /*\n  *  Before the X value will be passed to 'Square' function, but now it will be added by `handleClick` function\n  */\n\n  const [value, setValue] = useState(null);\n\n  function handleClick(){\n    console.log(\"clicked!\");\n    setValue('X');\n  }\n  return (\n    <button \n    className= \"square\" \n    onClick={handleClick}\n  >\n      {value}\n    </button> \n  );\n \n}\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC7B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA;MAAKK,SAAS,EAAG,WAAW;MAAAD,QAAA,gBAC1BJ,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,OAAG,eAAAV,OAAA,CAACM,MAAM;QAACK,KAAK,EAAG;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAG,WAAW;MAAAD,QAAA,gBAC1BJ,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAG,WAAW;MAAAD,QAAA,gBAC1BJ,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA,CAACM,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAKP;AACA;AACA;AACA;AACA;AACA;AACC;AAAAE,EAAA,GAvCuBT,KAAK;AAwC7B,SAASG,MAAMA,CAAA,EAAE;EAAAO,EAAA;EAEf;AACF;AACA;;EAEE,MAAM,CAACF,KAAK,EAAEG,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,SAASiB,WAAWA,CAAA,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBH,QAAQ,CAAC,GAAG,CAAC;EACf;EACA,oBACEd,OAAA;IACAK,SAAS,EAAE,QAAQ;IACnBa,OAAO,EAAEH,WAAY;IAAAX,QAAA,EAElBO;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGb;AAACG,EAAA,CArBQP,MAAM;AAAAa,GAAA,GAANb,MAAM;AAAA,IAAAM,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}